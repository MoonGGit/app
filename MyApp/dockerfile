FROM python:3.7-alpine

COPY ./server/.env/requirements.txt requirements.txt
RUN pip install -r requirements.txt

RUN apk add --no-cache gcc musl-dev libffi-dev openssl-dev python3-dev make libevent-dev build-base
RUN pip install --no-cache-dir cryptography==2.1.4 gevent==21.1.2
RUN apk del gcc musl-dev libffi-dev openssl-dev python3-dev make libevent-dev build-base

# todo : 쿼리 실행 추가 

WORKDIR /app/server
RUN mkdir -p /tmp/myapp_socket/
CMD ["gunicorn", "-k", "gevent", "--workers", "1", \
    "--bind", "unix:/tmp/myapp_socket/myapp.sock", \
    "wsgi:app", \
    "--worker-tmp-dir", "/tmp/myapp_socket/", \
    "--reload"]

## Flask-SoketIO : Due to the limited load balancing algorithm used by gunicorn, it is not possible to use more than one worker process when using this web server. For that reason, all the examples above include the -w 1 option,
## The workaround to use multiple worker processes with gunicorn is to launch several single-worker instances and put them behind a more capable load balancer such as nginx.