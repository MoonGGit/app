@import 'variables';
@import 'mixin';
@import 'utilities';
@import '../../node_modules/bootstrap/scss/bootstrap.scss';

* {
	// 드래그 방지
	user-select: none;
}

strong {
	color: black;
}

a {
	text-decoration: none;
	color: black !important;
}

ul {
	padding: 0px;
	list-style: none;
}

@each $cs, $cv in $colors {
	@each $os, $ov in $opacities {
		.bg-op-#{$cs}-#{$os} {
			position: relative;
			@include bg-op($cv, $ov);
		}
	}
}

.header {
	backdrop-filter: blur(30px);
	li > div > button {
		color: black !important;
	}
}

.headerColor {
	a,
	button {
		transition: color 3s ease;
		color: white !important;
	}

	@include lt-md {
		li > div > button {
			color: black !important;
		}
	}
}

// HeaderNavBar
@mixin navBarToggle {
	@keyframes navBarToggle {
		from {
			top: 25px;
			opacity: 0.2;
		}
		to {
			top: 42px;
			opacity: 1;
		}
	}
	visibility: visible !important;
	background-color: rgb(255, 255, 255);
	border: 1px solid rgb(128, 128, 128, 0.3);
	border-radius: 4px;
	font-weight: bold;
	font-size: 15px !important;
	animation-name: navBarToggle;
	animation-duration: 1s;
	top: 42px;

	li {
		height: 40px;
		display: flex;
		justify-content: center;
		&:not(&:last-child) {
			border-bottom: 1px solid rgb(128, 128, 128, 0.3);
		}
		& > * {
			color: black !important;
		}
	}
}

.navBarToggle-lt-md {
	// 0~767 px
	@include lt-md {
		@include navBarToggle;
	}
}

// 뷰박스
.loginBarToggle {
	@include navBarToggle;
	right: -28px;
	width: 302px;
	height: 180px;

	@keyframes loginBox {
		from {
			transform: translateX(300px);
		}
		to {
			transform: translateX(0px);
		}
	}
	& > div {
		animation-name: loginBox;
		animation-duration: 1s;
		animation-timing-function: ease;
		animation-fill-mode: both;
		width: 300px;
		height: 180px;
		display: flex;
		flex-direction: column;
		justify-content: space-evenly;
		padding-right: 5px;
		padding-left: 5px;

		& > input {
			font-size: 14px;
			font-weight: bold;
			text-align: center;
			border-radius: 5px;
			border: 2px solid #777171;
			box-sizing: border-box;
			border-color: #999999;
			color: black !important;
		}

		& > button {
			border: none;
			border-radius: 5px;
			font-weight: bold;
			font-size: 13px;
			border: 1px solid black;
			background: black;
			color: lightgrey;
			opacity: 0.7;
		}
	}
}

.footer {
	min-height: 75px;
	background-color: #756f76;
}

.fixedTopButton {
	@keyframes fixedTopButton {
		60% {
			transform: scale(1.3, 0.6);
		}
		80% {
			transform: scale(0.8, 1.2);
		}
		to {
			transform: scale(1);
		}
	}

	@keyframes fixedTopButtonRocket {
		50% {
			transform: none;
		}
		to {
			transform: translateY(-100px) rotateY(1turn);
			color: rgb(240, 140, 140, 0.3);
		}
	}
	position: fixed;
	bottom: 20px;
	right: 20px;
	&:hover {
		> * {
			transform: rotateY(1turn);
			transition: transform 1s linear;
		}
	}
	&:focus {
		animation-name: fixedTopButton;
		animation-duration: 0.5s;

		> * {
			animation-name: fixedTopButtonRocket;
			animation-duration: 0.6s;
		}
	}
}

.clickEffect {
	@keyframes clickEffect {
		to {
			opacity: 1;
			transform: scale(1.5);
		}
	}
	opacity: 0;
	position: fixed;
	pointer-events: none;
	animation-name: clickEffect;
	animation-duration: 1.5s;
}

.pageCard {
	max-height: 260px;
	& > div > div:first-child {
		border-right: 1px solid rgba(0, 0, 0, 0.125);
	}
	img {
		max-height: 258px;
		&:hover {
			transform: scale(1.4);
			transition: transform 1s ease-in-out;
		}
	}
	// 0~767 px
	@include lt-md {
		max-height: 200px;
		img {
			max-height: 198px;
		}
	}
}

.infoBox {
	height: 200px;
	border: 1px solid #e3e3e3;
	border-radius: 3px;
}

.divisionLine {
	border-bottom: 1px solid rgba(0, 0, 0, 0.2);
	filter: drop-shadow(0px 1px 2px black);
}

.moon {
	@keyframes show {
		to {
			opacity: 1;
		}
	}
	opacity: 0;
	transform: rotate(27deg);
	animation-delay: 1s;
	animation-name: show;
	animation-duration: 2.5s;
	animation-timing-function: ease;
	animation-fill-mode: both;
	@include gt-md {
		width: 100px;
	}
	@include lt-md {
		width: 70px;
	}
}

.mainBackground {
	// 메인 배경
	@keyframes backgroundScale {
		0%,
		100% {
			transform: scale(1);
		}
		50% {
			transform: scale(1.1);
		}
	}
	background: radial-gradient(ellipse at left, #171010 0%, black 100%);
	overflow: hidden;
	animation-name: backgroundScale;
	animation-duration: 40s;
	animation-timing-function: linear;
	animation-iteration-count: infinite;

	// 별 중심
	& > span {
		position: absolute;
		width: 4px;
		height: 4px;
		background: white;
		border-radius: 50%;
		transform: rotate(320deg);
		opacity: 0;
		animation-name: starShooting;

		// 별 중심 십자 빛 - 가로
		&::before {
			content: '';
			position: absolute;
			transform: translate(calc(-50% + 2px), 50%) rotateZ(40deg);
			height: 2px;
			border-radius: 100%;
			background: linear-gradient(40deg, black, #7f7f7f, black);
			animation-name: starShining;
		}

		// 별 중심 십자 빛 - 세로
		&::after {
			content: '';
			position: absolute;
			transform: translate(calc(-50% + 2px), 50%) rotateZ(-50deg);
			height: 2px;
			border-radius: 100%;
			background: linear-gradient(40deg, black, #7f7f7f, black);
			animation-name: starShining;
		}

		// 별 꼬리
		& > span {
			content: '';
			position: absolute;
			top: 50%;
			height: 1px;
			background: linear-gradient(90deg, #fff, transparent);
			animation-name: starTail;
		}

		// 별 꼬리
		@keyframes starTail {
			0%,
			100% {
				width: 0;
			}
			80% {
				width: 100px;
			}
		}

		// 별 십자 반짝임
		@keyframes starShining {
			0%,
			100% {
				width: 0;
			}
			80% {
				width: 30px;
			}
		}

		// 별 이동, 투명도
		@keyframes starShooting {
			0% {
				transform: rotate(320deg) translateX(0);
			}
			80% {
				transform: rotate(320deg) translateX(-600px);
				box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.1), 0 0 0 8px rgba(255, 255, 255, 0.1);
				opacity: 1;
			}
			100% {
				transform: rotate(320deg) translateX(-650px);
				opacity: 0;
				box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.1);
			}
		}

		// 랜덤 생성 - 위치, 딜레이, 지속기간
		@for $i from 1 through 10 {
			&:nth-child(#{$i}) {
				$delay: random(10) + 0s;
				$duration: random(7) + 3s;
				top: calc(#{random(60)}% - 10%);
				right: calc(#{random(65)}% - 10%);
				animation-delay: $delay;
				animation-duration: $duration;
				animation-timing-function: linear;
				animation-iteration-count: infinite;

				&::before,
				&::after {
					animation-delay: $delay;
					animation-duration: $duration;
					animation-timing-function: linear;
					animation-iteration-count: infinite;
				}

				& > span {
					animation-delay: $delay;
					animation-duration: $duration;
					animation-timing-function: linear;
					animation-iteration-count: infinite;
				}
			}
		}
	}
}

.mainPhrase {
	@keyframes mainPhrase {
		to {
			opacity: 1;
		}
	}
	opacity: 0;
	animation-name: mainPhrase;
	animation-fill-mode: both;
	animation-duration: 3s;
	animation-delay: 4s;
}

.clickCounter {
	animation: text-shadow 1.5s ease-in-out both;
}
@keyframes text-shadow {
	0%,
	100% {
		transform: translateY(0);
		text-shadow: 0;
	}

	20% {
		transform: translateY(-1em);
		text-shadow: 0 0.125em 0 #dc6565, 0 0.25em 0 #2c4bfd, 0 -0.125em 0 #8c7577, 0 -0.25em 0 #a5a587;
	}

	40% {
		transform: translateY(0.5em);
		text-shadow: 0 -0.0625em 0 #dc6565, 0 -0.125em 0 #2c4bfd, 0 0.0625em 0 #8c7577, 0 0.125em 0 #a5a587;
	}

	60% {
		transform: translateY(-0.25em);
		text-shadow: 0 0.03125em 0 #dc6565, 0 0.0625em 0 #2c4bfd, 0 -0.03125em 0 #8c7577, 0 -0.0625em 0 #a5a587;
	}
}

.dragAndDrop {
	display: flex;
	position: relative;
	border: 1px solid black;
	overflow: hidden;

	& > label {
		width: 100%;
		height: 100%;
		& > div {
			display: flex;
			justify-content: center;
			align-items: center;
			width: 100%;
			height: 100%;
			text-align: center;
			transform: rotateX(180deg);
			font-size: 10vw;
			padding: 10vw;
			@include lt-md {
				padding: 20vw;
			}
		}
	}
	@keyframes dragging {
		0%,
		100% {
			transform: translateY(-10px) rotateX(180deg);
		}
		50% {
			transform: translateY(10px) rotateX(180deg);
		}
	}
	.dragging {
		& > div {
			animation-name: dragging;
			animation-iteration-count: infinite;
			animation-duration: 2s;
			animation-timing-function: ease-in-out;
		}
	}
}

.dotsConverter-Wrapper {
	display: flex;
	flex-direction: row;
	padding: 10vw;

	@include lt-md {
		flex-direction: column;
	}
}

.dotsConverterView-Wrapper {
	border: 1px solid black;
	width: 47vw;
	margin-right: 3vw;
	padding: 2vw;
	@include lt-md {
		width: 100%;
		margin-bottom: 10px;
	}
}

.dotsConverter-View {
	position: relative;
	border: 1px solid black;
	margin-bottom: 5px;
}

.dragAndDropImage {
	position: absolute;
	width: calc(100% - 2px);
	height: calc(100% - 2px);
	top: 1px;
	left: 1px;
	visibility: hidden;
	pointer-events: none;
}

.dotsConverter-Nav {
	margin: 2px;
	border: 1px solid black;
	padding: 5px;
	padding-top: 0px;
	display: flex;
	justify-content: flex-end;

	& > button {
		border: none;
		background: none;
		font-size: 3vh;
		&:not(:last-child) {
			margin-right: 5px;
		}
	}
}

.dotsConverter-settingTable {
	font-size: 2vh;
	text-align: center;
	height: 60%;
	margin-bottom: 4px;

	@include lt-md {
		width: 100%;
	}

	&,
	th,
	td {
		border: 1px solid #b2bec3;
		padding-top: 5px;
		padding-bottom: 5px;
	}
	th,
	tr > td:first-of-type {
		background-color: #dfe6e9;
	}
	width: 30vw;
	border-collapse: collapse;

	select {
		text-align-last: center;
	}

	input,
	select {
		width: 90%;
	}
}

.dotsConverter-settingTable-wrapper {
	display: flex;
	flex-direction: column;
	align-items: stretch;

	& > button {
		background-color: #dfe6e9;
		border: 1px solid #b2bec3;
		border-radius: 4px;
	}
}

.dots-background-wrapper {
	overflow: hidden;
	pointer-events: none;
	width: 100%;
	clip-path: inset(0);

	// todo : dist/static에 뽑히지만, 블랙앤화이트0
	// background-image: url(../../assets/images/leaves2.png);
}

.dots-background {
	display: flex;
	position: fixed;
	height: 100%;

	& > img {
		width: 100vw;
		height: 100%;
	}

	animation-name: leavesToggle;
	animation-duration: 3s;
	animation-iteration-count: infinite;
	animation-timing-function: step-start;
	@keyframes leavesToggle {
		0%,
		100% {
			transform: translateX(0vw);
		}
		25% {
			transform: translateX(-100vw);
		}
		50% {
			transform: translateX(-200vw);
		}
		75% {
			transform: translateX(-300vw);
		}
	}
}
